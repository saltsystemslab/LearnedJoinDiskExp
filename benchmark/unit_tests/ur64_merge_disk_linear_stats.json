{
  "track_stats": true,
  "inputs": {
    "common": {
      "key_size": 8,
      "value_size": 8,
      "key_type": "uint64",
      "method": "uniform_dist",
      "algo": "create_input",
      "write_result_to_disk": true
    },
    "list": [
      {
        "name": "100M",
        "num_keys": 1000000
      },
      {
        "name": "50M",
        "num_keys": 500000
      },
      {
        "name": "33M",
        "num_keys": 333333
      },
      {
        "name": "25M",
        "num_keys": 250000
      },
      {
        "name": "20M",
        "num_keys": 200000
      },
      {
        "name": "20M",
        "num_keys": 200000
      },
      {
        "name": "16M",
        "num_keys": 166666
      },
      {
        "name": "14M",
        "num_keys": 142857 
      },
      {
        "name": "12M",
        "num_keys":125000 
      },
      {
        "name": "11M",
        "num_keys":111111 
      },
      {
        "name": "10M",
        "num_keys":100000 
      },
      {
        "name": "6M",
        "num_keys":60000 
      },
      {
        "name": "5M",
        "num_keys":50000 
      }
    ]
  },
  "algos": {
    "repeat": 5,
    "common": {
      "key_size": 8,
      "value_size": 8,
      "key_type": "uint64",
      "load_sstable_in_mem": false,
      "write_result_to_disk": true
    },
    "list": [
      {
        "name": "standard_merge",
        "algo": "standard_merge"
      },
      {
        "name": "PGM_64",
        "algo": "learned_merge_threshold",
        "threshold": 5,
        "index": {
          "type": "pgm64"
        }
      },
      {
        "name": "ONELEVEL_PGM_64_THRESH",
        "algo": "learned_merge_threshold",
        "threshold": 5,
        "index": {
          "type": "onelevel_pgm64"
        }
      },
      {
        "name": "RbTree",
        "algo": "learned_merge_threshold",
        "threshold": 5,
        "index": {
          "type": "rbtree"
        }
      },
      {
        "name": "BTree",
        "algo": "learned_merge_threshold",
        "threshold": 5,
        "index": {
          "type": "btree"
        }
      }
    ]
  },
  "tests": {
    "list": [
      {
        "dir": "50M_to_100M",
        "label": "50M_to_100M",
        "label_x": 2,
        "outer_table": "50M",
        "inner_table": "100M"
      },
      {
        "dir": "33M_to_100M",
        "label": "33M_to_100M",
        "label_x": 3,
        "outer_table": "33M",
        "inner_table": "100M"
      },
      {
        "dir": "25M_to_100M",
        "label": "25M_to_100M",
        "label_x": 4,
        "outer_table": "25M",
        "inner_table": "100M"
      }],
      "d": [
      {
        "dir": "20M_to_100M",
        "label": "20M_to_100M",
        "label_x": 5,
        "outer_table": "20M",
        "inner_table": "100M"
      },
      {
        "dir": "16M_to_100M",
        "label": "16M_to_100M",
        "label_x": 6,
        "outer_table": "16M",
        "inner_table": "100M"
      },
      {
        "dir": "14M_to_100M",
        "label": "14M_to_100M",
        "label_x": 7,
        "outer_table": "14M",
        "inner_table": "100M"
      },
      {
        "dir": "12M_to_100M",
        "label": "12M_to_100M",
        "label_x": 8,
        "outer_table": "12M",
        "inner_table": "100M"
      },
      {
        "dir": "11M_to_100M",
        "label": "11M_to_100M",
        "label_x": 9,
        "outer_table": "11M",
        "inner_table": "100M"
      },
      {
        "dir": "10M_to_100M",
        "label": "10M_to_100M",
        "label_x": 10,
        "outer_table": "10M",
        "inner_table": "100M"
      },
      {
        "dir": "6M_to_100M",
        "label": "6M_to_100M",
        "label_x": 16,
        "outer_table": "6M",
        "inner_table": "100M"
      },
      {
        "dir": "5M_to_100M",
        "label": "5M_to_100M",
        "label_x": 20,
        "outer_table": "5M",
        "inner_table": "100M"
      }
    ]
  },
  "report_format": "csv",
  "metrics": [
        ["result", "duration_sec"],
        ["result", "merge_log", "comparison_count"]
  ]
}